scale_x_log10() +
theme_classic()
figS3  #mass scaling of 1-month SGR (using current mass as M2 in SGR calc â€” growth of month prior)
# dark theme figure for presentations showing SMR vs. SGR (2 months)
ggplot(data[which(data$ds == "B1"),], aes(x = lead(SGR_2m), y = SMR_mass, colour = factor(Temp), fill = factor(Temp))) +
geom_point(size = 2) +
geom_smooth(method = "lm", se = T, aes(fill = factor(Temp))) +
scale_color_manual(values =c("skyblue", "orangered"),
guide = guide_legend(override.aes = list(size = 4))) +
scale_fill_manual(values =c("skyblue", "orangered"), guide = "none") +
labs(x = "Specific Growth Rate (%mass/day)", y = expression(SMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = expression("Temperature ("*degree*C*")")) +
theme_classic()
Fig1 <- ggplot(data[which(data$ds == "B1"),], aes(x = lead(SGR_2m), y = SMR_mass, colour = factor(Temp), fill = factor(Temp), shape = factor(Month))) +
geom_point(size = 2) +
geom_smooth(method = "lm", se = T, aes(fill = factor(Temp))) +
scale_color_manual(values =c("skyblue", "orangered"),
guide = guide_legend(override.aes = list(size = 4))) +
scale_fill_manual(values =c("skyblue", "orangered"), guide = "none") +
labs(x = "Specific Growth Rate (%mass/day)", y = expression(SMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = expression("Temperature ("*degree*C*")")) +
theme_classic()
Fig1
Fig1 <- ggplot(data[which(data$ds == "B1"),], aes(x = lead(SGR_2m), y = SMR_mass, colour = factor(Temp), fill = factor(Temp), shape = factor(Month), group = factor(Temp))) +
geom_point(size = 2) +
geom_smooth(method = "lm", se = T, aes(fill = factor(Temp))) +
scale_color_manual(values =c("skyblue", "orangered"),
guide = guide_legend(override.aes = list(size = 4))) +
scale_fill_manual(values =c("skyblue", "orangered"), guide = "none") +
labs(x = "Specific Growth Rate (%mass/day)", y = expression(SMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = expression("Temperature ("*degree*C*")")) +
theme_classic()
Fig1
Fig2 <- ggplot(data[which(data$ds == "B1"),], aes(x = lead(SGR_2m), y = MMR_mass, colour = factor(Temp), fill = factor(Temp),  group = factor(Temp))) + #shape = factor(Month),
geom_point(size = 2) +
geom_smooth(method = "lm", se = T, aes(fill = factor(Temp))) +
scale_color_manual(values =c("skyblue", "orangered"),
guide = guide_legend(override.aes = list(size = 4))) +
scale_fill_manual(values =c("skyblue", "orangered"), guide = "none") +
labs(x = "Specific Growth Rate (%mass/day)", y = expression(MMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = expression("Temperature ("*degree*C*")")) +
theme_classic()
Fig2
# plot gut ratio vs. mass-standardized SMR, indicate extrapolated values:
ggplot() +
geom_vline(xintercept = 74, color = "grey", linetype = "dashed", linewidth = 1.5) +
geom_point(data = data, aes(x = Ratio, y = SMR_mass, color = factor(Temp)), size = 2) +
geom_point(data = data[which(data$Month == "July"),], aes(x = Ratio, y = SMR_mass, color = factor(Temp)), shape = 21, fill = "black") +
geom_smooth(data = data, aes(x = Ratio, y = SMR_mass, color = factor(Temp)), method = "lm", se = F) +
scale_color_manual(values =c("deepskyblue3", "skyblue", "orange", "orangered"),
guide = guide_legend(override.aes = list(size = 4))) +
labs(x = "Gut Ratio (%)", y = expression(SMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = "Temperature") +
theme_minimal(base_size = 14) +
theme(
plot.background = element_rect(fill = "black", color = NA),
panel.background = element_rect(fill = "black", color = NA),
panel.grid = element_blank(),
legend.background = element_rect(fill = "black"),
legend.key = element_rect(fill = "black"),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
axis.title = element_text(color = "white"),
axis.text = element_text(color = "white"),
axis.line = element_line(color = "white"),
strip.background = element_rect(fill = "black"),
strip.text = element_text(color = "white")
)
# plot gut ratio vs. mass-standardized SMR, indicate extrapolated values:
ggplot() +
geom_vline(xintercept = 74, color = "grey", linetype = "dashed", linewidth = 1.5) +
geom_point(data = data, aes(x = Ratio, y = SMR_mass, color = factor(Temp)), size = 2) +
geom_point(data = data[which(data$Month == "July"),], aes(x = Ratio, y = SMR_mass, color = factor(Temp)), shape = 21, fill = "black") +
geom_smooth(data = data, aes(x = Ratio, y = SMR_mass, color = factor(Temp)), method = "lm", se = F) +
scale_color_manual(values =c("deepskyblue3", "skyblue", "orange", "orangered"),
guide = guide_legend(override.aes = list(size = 4))) +
labs(x = "Gut Ratio (%)", y = expression(SMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = "Temperature") +
theme_classic()
# plot gut ratio vs. mass-standardized SMR, indicate extrapolated values:
ggplot() +
geom_vline(xintercept = 74, color = "grey", linetype = "dashed", linewidth = 1.5) +
geom_point(data = data, aes(x = Ratio, y = SMR_mass, color = factor(Temp)), size = 2) +
geom_point(data = data[which(data$Month == "July"),], aes(x = Ratio, y = SMR_mass, color = factor(Temp)), shape = 21, fill = "white") +
geom_smooth(data = data, aes(x = Ratio, y = SMR_mass, color = factor(Temp)), method = "lm", se = F) +
scale_color_manual(values =c("deepskyblue3", "skyblue", "orange", "orangered"),
guide = guide_legend(override.aes = list(size = 4))) +
labs(x = "Gut Ratio (%)", y = expression(SMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = "Temperature") +
theme_classic()
# plot gut ratio vs. mass-standardized SMR, indicate extrapolated values:
ggplot() +
geom_vline(xintercept = 74, color = "grey", linetype = "dashed", linewidth = 1.5) +
geom_point(data = data, aes(x = Ratio, y = SMR_mass, color = factor(Temp)), size = 2) +
geom_point(data = data[which(data$Month == "July"),], aes(x = Ratio, y = SMR_mass, color = factor(Temp)), shape = 21, fill = "white") +
geom_smooth(data = data, aes(x = Ratio, y = SMR_mass, color = factor(Temp)), method = "lm", se = F) +
scale_color_manual(values =c("deepskyblue3", "skyblue", "orange", "orangered"),
guide = guide_legend()) +
labs(x = "Gut Ratio (%)", y = expression(SMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = "Temperature") +
theme_classic()
# gut ratio vs. mass-standardized SMR but using linearly extrapolated gut ratio values:
ggplot() +
geom_vline(xintercept = 74, color = "grey", linetype = "dashed", size = 1.5) +
geom_point(data = data, aes(x = Ratio_linear, y = SMR_mass, color = factor(Temp))) +
geom_point(data = data[which(data$Month == "July"),], aes(x = Ratio_linear, y = SMR_mass, color = factor(Temp)), shape = 21, fill = "white") +
geom_smooth(data = data, aes(x = Ratio_linear, y = SMR_mass, color = factor(Temp)), method = "lm", se = F) +
theme_bw() +
scale_color_manual(values =c("darkblue", "skyblue3", "orange", "orangered")) +
labs(x = "Gut Ratio (%)", y = expression(SMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = "Temperature")
# plot gut ratio vs. mass-standardized MMR, indicate extrapolated values:
fig4 <- ggplot() +
geom_vline(xintercept = 74, color = "grey", linetype = "dashed", linewidth = 1.5) +
.
# plot gut ratio vs. mass-standardized MMR, indicate extrapolated values:
fig4 <- ggplot() +
ggplot() +
geom_vline(xintercept = 74, color = "grey", linetype = "dashed", linewidth = 1.5) +
geom_point(data = data, aes(x = Ratio, y = MMR_mass, color = factor(Temp)), size = 2) +
geom_point(data = data[which(data$Month == "July"),], aes(x = Ratio, y = MMR_mass, color = factor(Temp)), shape = 21, fill = "white")+
geom_smooth(data = data, aes(x = Ratio, y = MMR_mass, color = factor(Temp)), method = "lm", se = F) +
scale_color_manual(values =c("deepskyblue3", "skyblue", "orange", "orangered"),
guide = guide_legend() +
labs(x = "Gut Ratio (%)", y = expression(MMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = "Temperature") +
theme_classic()
# plot gut ratio vs. mass-standardized MMR, indicate extrapolated values:
fig4 <- ggplot() +
# plot gut ratio vs. mass-standardized MMR, indicate extrapolated values:
fig4 <- ggplot() +
geom_vline(xintercept = 74, color = "grey", linetype = "dashed", linewidth = 1.5) +
geom_point(data = data, aes(x = Ratio, y = MMR_mass, color = factor(Temp)), size = 2) +
geom_point(data = data[which(data$Month == "July"),], aes(x = Ratio, y = MMR_mass, color = factor(Temp)), shape = 21, fill = "white")+
geom_smooth(data = data, aes(x = Ratio, y = MMR_mass, color = factor(Temp)), method = "lm", se = F) +
scale_color_manual(values =c("deepskyblue3", "skyblue", "orange", "orangered")),
# plot gut ratio vs. mass-standardized MMR, indicate extrapolated values:
fig4 <- ggplot() +
geom_vline(xintercept = 74, color = "grey", linetype = "dashed", linewidth = 1.5) +
geom_point(data = data, aes(x = Ratio, y = MMR_mass, color = factor(Temp)), size = 2) +
geom_point(data = data[which(data$Month == "July"),], aes(x = Ratio, y = MMR_mass, color = factor(Temp)), shape = 21, fill = "white")+
geom_smooth(data = data, aes(x = Ratio, y = MMR_mass, color = factor(Temp)), method = "lm", se = F) +
scale_color_manual(values =c("deepskyblue3", "skyblue", "orange", "orangered"),
guide = guide_legend()) +
labs(x = "Gut Ratio (%)", y = expression(MMR~(mg~O[2]~hr^-1~3.47~g^-1)), color = "Temperature") +
theme_classic()
fig4
ggplot(data = data, aes(x = mass, y = SMR, color = factor(Temp))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_bw() +
scale_color_manual(values =c("darkblue", "skyblue3", "orange", "orangered")) +
labs(x = "Mass (g)", y = expression(SMR~(mg~O[2]~hr^-1)), color = "Temperature") +
scale_x_log10() +
scale_y_log10()
ggplot(data = data, aes(x = mass, y = SMR, color = factor(Temp))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_bw() +
scale_color_manual(values =c("darkblue", "skyblue3", "orange", "orangered")) +
labs(x = "Mass (g)", y = expression(SMR~(mg~O[2]~hr^-1)), color = "Temperature") +
scale_x_log10() +
scale_y_log10() +
theme_classic()
fig5 <- ggplot(data = data, aes(x = mass, y = SMR, color = factor(Temp))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_bw() +
scale_color_manual(values =c("darkblue", "skyblue3", "orange", "orangered")) +
labs(x = "Mass (g)", y = expression(SMR~(mg~O[2]~hr^-1)), color = "Temperature") +
scale_x_log10() +
scale_y_log10() +
theme_classic()
fig5
fig6 <- ggplot(data = data, aes(x = mass, y = MMR, color = factor(Temp))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_bw() +
scale_color_manual(values =c("darkblue", "skyblue3", "orange", "orangered")) +
labs(x = "Mass (g)", y = expression(MMR~(mg~O[2]~hr^-1)), color = "Temperature") +
scale_x_log10() +
scale_y_log10() +
theme_classic()
fig6
View(ds3)
# KNIT SETTINGS
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
tidy = TRUE,
fig.align = "center"
)
lm_sgr_smr18 <- lmer(SMR_mass ~ SGR_2m_lead + (1 | ID), dataB1[which(dataB1$Temp == 18),])
# smr vs. growth linear models
library(lmerTest)
lm_sgr_smr18 <- lmer(SMR_mass ~ SGR_2m_lead + (1 | ID), dataB1[which(dataB1$Temp == 18),])
summary(lm_sgr_smr18)
plot(lm_sgr_smr18)
hist(lm_sgr_smr18$residuals)
lm_sgr_smr18 <- lm(SMR_mass ~ SGR_2m_lead, dataB1[which(dataB1$Temp == 18),])
plot(lm_sgr_smr18)
hist(lm_sgr_smr18$residuals)
summary(lm_sgr_smr18)
?cld
# KNIT SETTINGS
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
tidy = TRUE,
fig.align = "center"
)
# installs and loads packages, need to install "pacman" first
pacman::p_load("brms",
"broom",
"broom.mixed",
"car",
"coda",
"dplyr",
"emmeans",
"ggeffects",
"ggiraphExtra",
"ggplot2",
"ggpubr",
"grid",
"hms",
"lme4",
"lmerTest",
"lsmeans",
"lubridate",
"multcomp",
"multcompView",
"nlme",
"posterior",
"purrr",
"readxl",
"tidyr",
"wesanderson"
)
ds <- read.csv("001_Raw_Data/DS1_Hoots2025.csv") # read in data table
month_order <- c("April", "May", "June", "July", "August", "September", "November", "March") # assign chronological order to Month (otherwise alphabetical)
ds$Month <- factor(ds$Month, levels = month_order) # assign month_order to factor variable "Month" in ds
ds1 <- ds %>%
arrange(ID_fish, Month) %>%
group_by(ID_fish) %>%
mutate(mass_prev = lag(mass))
#month_order <- c("May", "June", "July", "August", "September", "November", "March") # assign chronological order to Month (otherwise alphabetical)
ds1$Month <- factor(ds1$Month, levels = month_order) # assign month_order to factor variable "Month" in ds1
ds1 <- ds1 %>%
arrange(ID_fish, Month) %>%
group_by(ID_fish) %>%
mutate(SMR_prev = lag(SMR),
MMR_prev = lag(MMR)) %>%
ungroup()
ds1 <- ds1 %>%
dplyr::mutate(
Date = as.Date(time_start, format = "%d/%m/%Y")
) %>%
dplyr::mutate(ds = "B1",
ID = paste("B1",ID_fish, sep = "_"),
Temp = as.factor(Temp_class),
SMR_mass = NA,
SMR_mass_prev = NA,
MMR_mass = NA,
MMR_mass_prev = NA) %>%
dplyr::select(ds, Month, Date, Temp, ID, mass, mass_prev, SGR, SMR, SMR_mass, SMR_resid, SMR_prev, SMR_mass_prev, MMR, MMR_mass, MMR_prev, MMR_mass_prev)
ds1 <- ds1 %>%
group_by(ID) %>%
mutate(SGR_2m = (log(mass) - lag(log(mass), n = 2)) / as.numeric(difftime(Date, lag(Date, n = 2), units = "days")) * 100) %>%
ungroup()
ds1 <- ds1[which(ds1$Month != "April"),] # subset a new table which excludes April, use if temp treatment matters or if not SGR
#### let's also quickly take a look at those gut ratios
B1_gut <- read.csv("001_Raw_Data/GutRatio.csv")
# Ensure Temp is correctly assigned
B1_gut <- B1_gut %>%
mutate(
Ratio = 100*Ratio,
Rack = as.factor(Rack),
Date = as.Date(Date, format = "%d/%m/%Y"),
Julian = as.numeric(format(Date, "%j")),  # Convert Date to Julian day
stage = as.factor(stage),
ID = as.character(ID_fish),
ID_fish = NULL,
Temp = as.factor(case_when(Rack == 1 ~ 18, Rack == 3 ~ 23))
) %>%
mutate(ID = paste0("B1_", ID))
ggplot(data = ds1, aes(x = factor(Month, levels = month_order), y = lead(SGR_2m), color = Temp)) + #note: by specifying lag() or lead() SGR, you see completely different relationships
geom_point() +
geom_smooth(method = "lm") +
geom_line(aes(group = ID), alpha = 0.2) +
scale_color_manual(values =c("skyblue3","orangered")) +
facet_grid(.~Temp) +
#scale_x_log10() +
theme_bw()
ggplot(data=B1_gut, aes(x = Date, y = Ratio, color = Temp)) +
geom_hline(yintercept = 74, linetype = "dashed", color = "black") +
geom_line(aes(group = ID), alpha = 0.3) +
geom_smooth(aes(group = Temp), method = "lm") +
theme_bw() +
scale_color_manual(values = c("#78B7C5", "#F21A00")) +
labs(color = expression("Temperature ("*degree*C*")"), y = "Gut to Body Depth Ratio (%)") +
theme_classic()
# Define July dates
July <- ds1 %>%
filter(Temp == 18) %>%
filter(Month == "July") %>%
dplyr::select("Date", "Temp", "ID")
# Fit individual regressions only for fish with at least two data points
gut_models <- B1_gut %>%
group_by(ID) %>%
filter(n() > 1) %>%  # Ensure at least two data points per fish
summarise(
model = list(lm(Ratio ~ Date, data = pick(everything())))
) %>%
ungroup()
# Predict values for July
gut_predictions <- July %>%
left_join(gut_models, by = "ID") %>%
mutate(
Ratio = map2_dbl(model, Date, ~ if (!is.null(.x)) predict(.x, newdata = data.frame(Date = .y)) else NA_real_)
) %>%
dplyr::select(ID, Date, Temp, Ratio)
# Combine with original data
B1_gut_linear <- bind_rows(
B1_gut %>% dplyr::select(ID, Date, Temp, Ratio),
gut_predictions
) %>% rename(
Ratio_linear = Ratio
)
B1_gut_linear$ID <- as.character(B1_gut_linear$ID)
# Merge extrapolated data into ds1
ds1 <- ds1 %>%
left_join(B1_gut_linear %>% dplyr::select("ID", "Date", "Ratio_linear"), by = c("ID", "Date"), na_matches = "na")
fig_line <- ggplot(B1_gut_linear[which(B1_gut_linear$"Temp" == 18),], aes(x = Date, y = Ratio_linear, color = Temp)) +
geom_hline(yintercept = 74, color = "darkgrey", linewidth = 1, linetype = "dashed") +
geom_smooth(aes(group = ID), method = "lm", linewidth = 0.5, se = FALSE) +
geom_point(data = B1_gut_linear[which(B1_gut_linear$Temp == 18),], aes(x = Date, y = Ratio_linear, color = Temp), size = 1.5) +
geom_point(data = gut_predictions[which(gut_predictions$Temp == 18),], aes(x = Date, y = Ratio), size = 2, shape = 21, fill = "white") +
scale_color_manual(values = c("#78B7C5")) +
labs(color = expression("Temperature ("*degree*C*")"), y = "Gut to Body Depth Ratio (%)") +
theme_bw()
fig_line
# # # Fit global poly2 model (for trend)
global_model <- lm(Ratio ~ poly(Julian, 2), data = B1_gut)
# Get residuals (how each ID deviates from the trend)
B1_gut <- B1_gut %>%
mutate(Residual = Ratio - predict(global_model, newdata = data.frame(Julian = Julian)))
# Extract individual July dates per fish - only in the 18C treatment
July_dates <- ds1 %>%
filter(Temp == 18) %>%
filter(Month == "July") %>%
dplyr::select("Date", "Temp", "ID") %>%
mutate(
Julian = as.numeric(format(Date, "%j")),
Global_Pred = predict(global_model, newdata = data.frame(Julian = Julian)),  # Global trend
ID = as.character(ID))
# Adjust for individual residuals based on their own July date
gut_predictions <- B1_gut %>%
filter(Temp == 18) %>%
group_by(ID) %>%
summarise(Mean_Residual = mean(Residual, na.rm = TRUE), Temp = first(Temp)) %>%
ungroup() %>%
left_join(July_dates, by = c("ID", "Temp")) %>%
mutate(
Ratio = Global_Pred + Mean_Residual  # Adjusted extrapolation for each fish's date
) %>%
dplyr::select(ID, Date, Julian, Temp, Ratio)
# Combine observed data & adjusted extrapolated points
B1_gut_extrap <- bind_rows(
B1_gut %>% mutate(ID = as.character(ID)) %>% dplyr::select(ID, Date, Temp, Ratio),
gut_predictions
) %>%
mutate(Julian = as.numeric(format(Date, "%j")))
B1_gut_extrap$ID <- as.character(B1_gut_extrap$ID)
# Merge extrapolated data into ds1
ds1 <- ds1 %>%
left_join(B1_gut_extrap %>% dplyr::select("ID", "Date", "Ratio"), by = c("ID", "Date"), na_matches = "na")
# Plot updated results
fig_quad <- ggplot(B1_gut_extrap[which(B1_gut_extrap$Temp == 18),], aes(x = Date, y = Ratio, color = Temp)) +
geom_hline(yintercept = 74, color = "darkgrey", linewidth = 1, linetype = "dashed") +
# Individual smooth curves (won't be perfect poly2 but close)
geom_smooth(aes(group = ID), method = "lm", formula = y ~ poly(x, 2), linewidth = 0.5, se = FALSE) +
# Observed points + Individually extrapolated July points
geom_point(data = B1_gut[which(B1_gut$Temp == 18),], aes(x = Date, y = Ratio, color = Temp), size = 1.5) +
geom_point(data = gut_predictions, aes(x = Date, y = Ratio), size = 2, shape = 21, fill = "white") +
scale_color_manual(values = c("#78B7C5")) +
labs(color = expression("Temperature ("*degree*C*")"), y = "Gut to Body Depth Ratio (%)") +
theme_bw()
fig_quad
# merge extrapolated data into ds1
ds1 <- ds1 %>%
left_join(B1_gut_extrap %>% dplyr::select("ID", "Date", "Ratio"), by = c("ID", "Date"), na_matches = "na") %>%
left_join(B1_gut_linear %>% dplyr::select("ID", "Date", "Ratio_linear"), by = c("ID", "Date"), na_matches = "na") %>%
mutate(Date = NULL,
Ratio = Ratio.x,
Ratio_linear = Ratio_linear.x,
Ratio.y = NULL,
Ratio_linear.y = NULL,
log_SMR = log10(SMR),
log_MMR = log10(MMR),
log_mass = log10(mass)) %>%
dplyr::select(ds, Month, Temp, ID, mass, mass_prev, SGR, SGR_2m, SMR, SMR_mass, SMR_resid, SMR_prev, SMR_mass_prev, MMR, MMR_mass, MMR_prev, MMR_mass_prev, Ratio, Ratio_linear, log_SMR, log_MMR, log_mass)
ds2 <- read.csv("001_Raw_Data/DS2_Hoots2024.csv")
ds2<- ds2 %>%
dplyr::mutate(
ds = "B2",
Month = as.factor(Month),
Temp = as.factor(Temp),
mass_prev = NA,
SGR_2m = NA,
ID = paste("B2",ID, sep = "_"),
mass_SMR = SMR_mass,
SMR_resid = NA,
SMR_mass = NA,
SMR_mass_prev = NA,
MMR_mass = NA,
MMR_mass_prev = NA,
log_SMR = log10(SMR),
log_MMR = log10(MMR),
log_mass = log10(mass),
Ratio = NA,
Ratio_linear = NA
) %>%
arrange(ID, Month) %>%
group_by(ID) %>%
mutate(mass_prev = lag(mass)) %>%
ungroup() %>%
dplyr::select(ds, Month, Temp, ID, mass, mass_prev, SGR, SGR_2m, SMR, SMR_mass, SMR_resid, SMR_prev, SMR_mass_prev, MMR, MMR_mass, MMR_prev, MMR_mass_prev, Ratio, Ratio_linear, log_SMR, log_MMR, log_mass)
ds3 <- read_excel("001_Raw_data/DS3_Skeeles2024.xlsx", sheet = "Beth Normoxia Only")
ds3 <- ds3 %>%
dplyr::mutate(
ds = "M",
Month = "June",
Temp = as.factor(temperature),
ID = as.character(paste0("M", row_number())),
#ID = paste("M", id, sep = "_"),
mass = `average of 1st and 2nd mass (g)`,
mass_prev = NA,
SGR = NA,
SGR_2m = NA,
SMR = SMRnorm,
SMR_mass = NA,
SMR_resid = NA,
SMR_prev = NA,
SMR_mass_prev = NA,
MMR = MMRnorm,
MMR_mass = NA,
MMR_prev = NA,
MMR_mass_prev = NA,
Ratio = `gutwidth/totalwidth`,
Ratio_linear = `gutwidth/totalwidth`,
log_SMR = log10(SMRnorm),
log_MMR = log10(MMRnorm),
log_mass = log10(`average of 1st and 2nd mass (g)`)
) %>%
arrange(ID, Month) %>%
group_by(ID) %>%
mutate(mass_prev = lag(mass)) %>%
ungroup() %>%
dplyr::select(ds, Month, Temp, ID, mass, mass_prev, SGR, SGR_2m, SMR, SMR_mass, SMR_resid, SMR_prev, SMR_mass_prev, MMR, MMR_mass, MMR_prev, MMR_mass_prev, Ratio, Ratio_linear, log_SMR, log_MMR, log_mass)
data <- bind_rows(ds1, ds2, ds3)
temp_order <- c(15, 18, 20, 23) # assign chronological order to Temp (otherwise alphabetical)
data$Temp <- factor(data$Temp, levels = temp_order) # assign temp_order to factor variable "Temp" in ds1
data$Month <- factor(data$Month, levels = month_order) # assign month_order to factor variable "Month" in ds1
lm_15_SMR <- lm(log_SMR ~ log_mass, data = data[which(data$Temp == 15),])
plot(lm_15_SMR)
summary(lm_15_SMR)
lm_18a_SMR <- lm(log_SMR ~ log_mass, data = data[which(data$ds == "B1" & data$Temp == 18),])
plot(lm_18a_SMR)
summary(lm_18a_SMR)
lm_18b_SMR <- lm(log_SMR ~ log_mass, data = data[which(data$ds == "B2"),])
plot(lm_18b_SMR)
summary(lm_18b_SMR)
lm_20_SMR <- lm(log_SMR ~ log_mass, data = data[which(data$Temp == 20),])
plot(lm_20_SMR)
summary(lm_20_SMR)
lm_23_SMR <- lm(log_SMR ~ log_mass, data = data[which(data$Temp == 23),])
plot(lm_23_SMR)
summary(lm_23_SMR)
log_mass_grandmean = data.frame(log_mass = log10(mean(data$mass))) #grand mean mass is 3.47 g
SMR_mean_predicted_15 = predict(lm_15_SMR, newdata = log_mass_grandmean)
SMR_mean_predicted_18a = predict(lm_18a_SMR, newdata = log_mass_grandmean)
SMR_mean_predicted_18b = predict(lm_18b_SMR, newdata = log_mass_grandmean)
SMR_mean_predicted_20 = predict(lm_20_SMR, newdata = log_mass_grandmean)
SMR_mean_predicted_23 = predict(lm_23_SMR, newdata = log_mass_grandmean)
data <- data %>% mutate(resid = NA)
#adding the residuals calculated from our regressions to our table
data[which(data$Temp == 15),] <- data[which(data$Temp == 15),] %>%
mutate(resid = residuals(lm_15_SMR))
data[which(data$ds == "B1" & data$Temp == 18),] <- data[which(data$ds == "B1" & data$Temp == 18),] %>%
mutate(resid = residuals(lm_18a_SMR))
data[which(data$ds == "B2"),] <- data[which(data$ds == "B2"),] %>%
mutate(resid = residuals(lm_18b_SMR))
data[which(data$Temp == 20),] <- data[which(data$Temp == 20),] %>%
mutate(resid = residuals(lm_20_SMR))
data[which(data$Temp == 23),] <- data[which(data$Temp == 23),] %>%
mutate(resid = residuals(lm_23_SMR))
data$log_SMR_mass[data$Temp == 15] <-
SMR_mean_predicted_15 + data$resid[data$Temp == 15]
data$log_SMR_mass[data$ds == "B1" & data$Temp == 18] <-
SMR_mean_predicted_18a + data$resid[data$ds == "B1" & data$Temp == 18]
data$log_SMR_mass[data$ds == "B2"] <-
SMR_mean_predicted_18b + data$resid[data$ds == "B2"]
data$log_SMR_mass[data$Temp == 20] <-
SMR_mean_predicted_20 + data$resid[data$Temp == 20]
data$log_SMR_mass[data$Temp == 23] <-
SMR_mean_predicted_23 + data$resid[data$Temp == 23]
data <- data %>%
mutate(
SMR_mass = as.numeric(10^log_SMR_mass)
) %>%
dplyr::select( -log_SMR_mass, -log_SMR, -resid)  # Clean up unnecessary columns
data <- data %>%
arrange(ID, Month) %>%
group_by(ID) %>%
mutate(SMR_mass_prev = lag(SMR_mass)) %>%
ungroup()
#write.csv(data, file = "ch3datamerge.csv", col.names = TRUE, row.names = FALSE)
View(ds1)
View(ds2)
View(ds3)
